{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","createPromise1","Promise","resolve","addEventListener","createPromise2","reject","setTimeout","promise1","promise2","then","message","div","createElement","className","innerText","append","catch","error","console","warn"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,QAwCpC,SAASC,IASA,OAAA,IAAIC,QARM,SAACC,GACHJ,SAASC,cAAc,SAE/BI,iBAAiB,QAAS,WAC7BD,EAAQ,6BAOd,SAASE,IAOA,OAAA,IAAIH,QANM,SAACC,EAASG,GACzBC,WAAW,WACTD,EAAO,0BACN,OAMP,IAAME,EAAWP,IACXQ,EAAWJ,IAEjBG,EACGE,KAAK,SAAAC,GACEC,IAAAA,EAAMb,SAASc,cAAc,OAEnCD,EAAIE,UAAY,UAChBF,EAAIG,UAAYJ,EAEhBb,EAAKkB,OAAOJ,KAEbK,MAAM,SAAAC,GAELC,QAAQC,KAAKF,KAGjBT,EACGQ,MAAM,SAAAC,GACCN,IAAAA,EAAMb,SAASc,cAAc,OAEnCD,EAAIE,UAAY,gBAChBF,EAAIG,UAAYG,EAEhBpB,EAAKkB,OAAOJ","file":"main.2b60ac0a.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\n\n// I made the task following the description, but added my solution!\n\n// function createPromise() {\n//   const resolver = (resolve, reject) => {\n//     const logo = document.querySelector('.logo');\n//\n//     logo.addEventListener('click', () => {\n//       resolve('Promise was resolved!');\n//     });\n//\n//     setTimeout(() => {\n//       reject('Promise was rejected!');\n//     }, 3000);\n//   };\n//\n//   return new Promise(resolver);\n// }\n//\n// const promise = createPromise();\n//\n// promise\n//   .then(message => {\n//     const div = document.createElement('div');\n//\n//     div.className = 'message';\n//     div.innerText = message;\n//\n//     body.append(div);\n//   })\n//   .catch(error => {\n//     const div = document.createElement('div');\n//\n//     div.className = 'error-message';\n//     div.innerText = error;\n//\n//     body.append(div);\n//   });\n\nfunction createPromise1() {\n  const resolver = (resolve) => {\n    const logo = document.querySelector('.logo');\n\n    logo.addEventListener('click', () => {\n      resolve('Promise was resolved!');\n    });\n  };\n\n  return new Promise(resolver);\n}\n\nfunction createPromise2() {\n  const resolver = (resolve, reject) => {\n    setTimeout(() => {\n      reject('Promise was rejected!');\n    }, 3000);\n  };\n\n  return new Promise(resolver);\n}\n\nconst promise1 = createPromise1();\nconst promise2 = createPromise2();\n\npromise1\n  .then(message => {\n    const div = document.createElement('div');\n\n    div.className = 'message';\n    div.innerText = message;\n\n    body.append(div);\n  })\n  .catch(error => {\n    // eslint-disable-next-line\n    console.warn(error);\n  });\n\npromise2\n  .catch(error => {\n    const div = document.createElement('div');\n\n    div.className = 'error-message';\n    div.innerText = error;\n\n    body.append(div);\n  });\n\n\n"]}